type Currency = variant {
    XTC;
    WICP;
    ICP;
    SONIC;
    BlackHole;
};


type IcpXdrConversionRateCertifiedResponse = record {
  certificate: vec nat8;
  data: IcpXdrConversionRate;
  hash_tree: vec nat8;
};


type IcpXdrConversionRate = record {
  xdr_permyriad_per_icp: nat64;
  timestamp_seconds: nat64;
};

type MemberInfo = record {
  nickname: text;
  instime: nat64;
};

type Members = vec record {
  principal; MemberInfo
};

type OrganizesToMembers = vec record {
  text; Members
};

type CanisterInfo = record {
    nickname: text; // 罐别称
    instime: nat64;  // 罐插入时间
    updtime: nat64;  // 上次更新Cycles时间
    cycles_balance: nat64;  // 罐余额
    time_interval: nat64; // 轮训时间间隔
    cycles_minimum: nat64;  // 最低Cycles
    cycles_highest: nat64;  // 最高Cycles
};

type Canisters = vec record {
  principal; CanisterInfo
};

type OrganizesToCanisters = vec record {
  text; Canisters
};

type OrganizationOwnerMemberOutput = vec OrganizesToMembers;
type OrganizationOwnerCanisterOutput = vec OrganizesToCanisters;


service : {
    // 测试单个接口
     "my_cycles_balance" : () -> (nat64) query;
     "my_canister_config" : (Currency) -> (principal) query;
     "select_canister_account_id" : () -> (text) query;
     "get_cycles_rate" : () -> (float64);
     "use_black_hole_cycles_balance" : (principal) -> (nat);
     "ic_time" : () -> (nat64) query;
     "icp_balance" : (principal) -> (nat64);
     "get_swap_price" : (Currency, Currency) -> (float64);
     // 项目使用接口
     // 组织组织接口
     "create_organize": (text) -> (text);  // 创建组织
     "transfer_organization_ownership": (text, principal) -> (text);  // 转让组织所有权
     "disband_the_organization": (text) -> (text);  // 解散组织
     // 组织成员接口
     "organization_owner_add_members_to_organization": (principal, text, text) -> (text);  // 组织所有人 向组织 添加成员
     "organization_owner_minus_organization_members": (principal, text) -> (text);  // 组织 所有人 减掉 组织成员
     "the_organization_owner_queries_the_organization_under_his_own_name_and_the_users_under_the_organization": () -> (OrganizationOwnerMemberOutput);  // 组织所有者查询自己名下组织及组织下的用户
    // 组织罐接口
    "the_organization_owner_adds_a_new_jar_to_the_organization": (text, text, principal, nat64, nat64, nat64) -> (text);  // 组织所有人向组织添加新罐
    "organization_owner_delete_jar": (text, principal) -> (text);  // 组织所有人 删除罐
    "organization_owner_modify_jar": (text, principal, nat64, nat64, nat64) -> (text);  // 组织所有人 修改罐
    "organization_owner_query_the_organization_under_his_name_and_the_tanks_under_the_organization": () -> (OrganizationOwnerCanisterOutput);  // 组织所有人 查询自己名下组织及组织下的罐
}

