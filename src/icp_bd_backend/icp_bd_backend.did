type Currency = variant {
    XTC;
    WICP;
    ICP;
    SONIC;
    BlackHole;
};


type IcpXdrConversionRateCertifiedResponse = record {
  certificate: vec nat8;
  data: IcpXdrConversionRate;
  hash_tree: vec nat8;
};


type IcpXdrConversionRate = record {
  xdr_permyriad_per_icp: nat64;
  timestamp_seconds: nat64;
};



service : {
    // 测试单个接口
     "my_cycles_balance" : () -> (nat64) query;
     "my_canister_config" : (Currency) -> (principal) query;
     "select_canister_account_id" : () -> (text) query;
     "get_cycles_rate" : () -> (float64);
     "use_black_hole_cycles_balance" : (principal) -> (nat);
     "ic_time" : () -> (nat64) query;
     "icp_balance" : (principal) -> (nat64);
     "get_swap_price" : (Currency, Currency) -> (float64);
     // 项目使用接口
     "create_organize": (text) -> (text);
     "transfer_organization_ownership": (text, principal) -> (text);
     "disband_the_organization": (text) -> (text);

}

